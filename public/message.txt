"use client";
import { cascadia } from "@/utils/cascadia";
import {
  useScroll,
  motion,
  useTransform,
  useMotionValue,
  useInView,
} from "framer-motion";
import Image from "next/image";
import { useRef } from "react";
import { useMediaQuery } from "react-responsive";

const Portfolio = () => {
  const refPortfolio = useRef();
  const isSmallScreen = useMediaQuery({ maxWidth: 1280 });
  const { scrollYProgress } = useScroll({
    target: refPortfolio,
    offset: ["0 1", "1 0"],
  });
  const y1 = useTransform(scrollYProgress, [0, 0.4], ["20%", "0%"]);
  const y2 = useTransform(scrollYProgress, [0, 1], ["0%", "-100%"]);
  const opacity1 = useTransform(
    scrollYProgress,
    [0, 0.1, 0.3, 0.4],
    [0, 1, 1, 0]
  );
  const opacity2 = useTransform(
    scrollYProgress,
    [0.1, 0.4, 0.7, 0.8],
    [0, 1, 1, 0]
  );
  const scaleHeading = useTransform(
    scrollYProgress,
    [0, 0.3, 0.8],
    [1, 10, 600]
  );
  // const yHeading = useTransform(scrollYProgress,[0,0.8],["0%","700%"])

  const portfolioData1 = [
    {
      name: "Aura Furnish",
      desc: "asdsada das dsa dsad sad ad sadsa sad sad adsa dsada",

      image: "/portfolio-1.jpg",
    },
    {
      name: "Verve Vorgue",
      desc: "asdsada das dsa dsad sad ad sadsa sad sad adsa dsada",

      image: "/portfolio-2.jpg",
    },
    {
      name: "Habittracker",
      desc: "asdsada das dsa dsad sad ad sadsa sad sad adsa dsada",

      image: "/portfolio-3.jpg",
    },
  ];
  const portfolioData2 = [
    {
      name: "Blaze Byte",
      desc: "asdsada das dsa dsad sad ad sadsa sad sad adsa dsada",

      image: "/portfolio-4.jpg",
    },
    {
      name: "Stride Ride",
      desc: "asdsada das dsa dsad sad ad sadsa sad sad adsa dsada",

      image: "/portfolio-5.jpg",
    },
    {
      name: "Vivara",
      desc: "asdsada das dsa dsad sad ad sadsa sad sad adsa dsada",

      image: "/portfolio-6.jpg",
    },
  ];
  return (
    <div
      className="flex flex-col justify-start items-start xl:pb-44 panel bg-neutral-900 h-[550vh] xl:h-[400vh] relative"
      ref={refPortfolio}
      data-color="black"
    >
      <motion.div
        className="flex flex-col xl:flex-row xl:sticky xl:top-[10vh] h-full  max-w-lg mx-auto xl:max-w-none"
        style={{
          opacity: isSmallScreen ? 1 : opacity1,
          y: isSmallScreen ? "" : y1,
        }}
      >
        {portfolioData1.map((portfolio) => {
          return (
            <>
              <PortfolioCard
                title={portfolio.name}
                desc={portfolio.desc}
                image={portfolio.image}
              />
            </>
          );
        })}
      </motion.div>

      <motion.div
        className="flex flex-col xl:flex-row xl:sticky xl:top-[120vh] max-w-lg mx-auto xl:max-w-none"
        style={{ y:isSmallScreen? "" :y2, opacity:isSmallScreen? 1: opacity2 }}
      >
        {portfolioData2.map((portfolio) => {
          return (
            <>
              <PortfolioCard
                title={portfolio.name}
                desc={portfolio.desc}
                image={portfolio.image}
              />
            </>
          );
        })}
      </motion.div>
    </div>
  );
};

const PortfolioCard = ({ title, y, desc, image }) => {
  const refPortfolioCard = useRef();
  const { scrollYProgress } = useScroll({
    target: refPortfolioCard,
    offset: ["0 0", "1 0"],
  });
  const headingY = useTransform(scrollYProgress, [0, "0%"], [1, "-20%"]);

  return (
    <motion.div
      className="group relative mx-auto bg-neutral-900 pb-24 border-x border-neutral-800"
      ref={refPortfolioCard}
    >
      <Image
        src={image}
        width={800}
        height={800}
        className=" -z-10 w-[800px] h-[500px] object-cover"
        alt="asd"
      />
      <div className="text-4xl text-neutral-100">{title}</div>
    </motion.div>
  );
};

export default Portfolio;
